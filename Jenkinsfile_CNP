#!groovy

@Library("Infrastructure")

def type = "java"
def product = "prl"
def component = "rpa"

withPipeline(type, product, component) {
  loadVaultSecrets(secrets)
  enableAksStagingDeployment()
  disableLegacyDeployment()

  after('checkout') {
    echo '${product}-${component} checked out'
  }

  before('smoketest:aat') {
    env.test_environment = 'aat'
  }

  before('functionalTest:aat') {
    env.test_environment = 'aat'
  }

  before('smoketest:preview') {
    env.test_environment = 'aat'
  }

  // Kubernetes does not retrieve variables from the output terraform
  before('functionalTest:preview') {
    env.FEATURE_RESP_SOLICITOR_DETAILS = 'true'
    env.test_environment = 'aat'
  }

  after('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
  }

  after('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
  }

  onMaster() {
    enablePactAs([AppPipelineDsl.PactRoles.CONSUMER])
  }
}
